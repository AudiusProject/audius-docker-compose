version: "3.9"

# used by audius-d devnet
x-extra-hosts: &extra-hosts
  extra_hosts:
    - "creator-1.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "discovery-1.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "identity.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "eth-ganache.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "acdc-ganache.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "solana-test-validator.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"

services:
  core:
    container_name: core
    image: audius/core:${TAG:-current}
    restart: unless-stopped
    ports:
      - "26656:26656" # CometBFT P2P Server
      - "26657:26657" # CometBFT RPC Server
      - "26659:26659" # Console UI
      - "50051:50051" # Core GRPC Server
    mem_limit: 1g
    cpus: 1
    volumes:
      - /var/k8s/bolt:/audius-core
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    pull_policy: always
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: postgres
    image: postgres:15.5
    shm_size: 2g
    restart: always
    entrypoint: >
        /bin/bash -c
        "if [ -f /var/lib/postgresql/data/pg_hba.conf ]; then
          if [[ $$(tail -n 1 /var/lib/postgresql/data/pg_hba.conf) != 'hostnossl    all          all            0.0.0.0/0  trust' ]]; then
            echo 'hostnossl    all          all            0.0.0.0/0  trust' >> /var/lib/postgresql/data/pg_hba.conf;
          fi;
        fi;
        /usr/local/bin/docker-entrypoint.sh postgres -c shared_buffers=2GB -c max_connections=500 -c shared_preload_libraries=pg_stat_statements -c listen_addresses='*'"
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: audius_discovery
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    volumes:
      - /var/k8s/discovery-provider-db:/var/lib/postgresql/data
    networks:
      - discovery-provider-network

  vector:
    extends:
      file: ../common-services.yml
      service: vector
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    volumes:
      - ../auto-upgrade.log:/auto-upgrade.log

  caddy:
    image: audius/caddy:2.7.4
    container_name: caddy
    <<: *extra-hosts
    restart: unless-stopped
    env_file:
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  uptime:
    image: audius/uptime:current
    container_name: uptime
    <<: *extra-hosts
    restart: unless-stopped
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    volumes:
      - /var/k8s/bolt:/bolt

networks:
  discovery-provider-network:

volumes:
  esdata: # leave in tact for backward compat
  caddy_data:
  caddy_config:
