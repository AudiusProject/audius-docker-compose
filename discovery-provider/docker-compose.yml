version: "3.9"

services:
  db:
    container_name: postgres
    restart: always
    extends:
      file: ../common-services.yml
      service: base-db
    volumes:
      - /var/k8s/discovery-provider-db:/var/lib/postgresql/data # Use k8s location for backward compatibility
    networks:
      - discovery-provider-network

  cache:
    container_name: redis
    restart: always
    extends:
      file: ../common-services.yml
      service: base-cache
    networks:
      - discovery-provider-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    restart: always
    environment:
      - network.host=0.0.0.0
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - node.name=cluster1-node1
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - discovery-provider-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail elasticsearch:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      timeout: 5s

  backend:
    container_name: server
    image: audius/discovery-provider:${TAG:-23d350aabedfe7e4c3a4c3bd060c2f550f695068}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    labels:
      autoheal: "true"
    ports:
      - "5000:5000"
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    networks:
      - discovery-provider-network

  seed:
    image: audius/discovery-provider:${TAG:-23d350aabedfe7e4c3a4c3bd060c2f550f695068}
    command: bash /usr/share/seed.sh ${NETWORK:-prod}
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    volumes:
      - ./seed.sh:/usr/share/seed.sh
    depends_on:
      db:
        condition: service_healthy
    networks:
      - discovery-provider-network
    profiles:
      - seed

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30

networks:
  discovery-provider-network:


volumes:
  esdata:
