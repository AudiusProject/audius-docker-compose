version: "3.9"

services:
  db:
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: audius_discovery
    extends:
      file: ../common-services.yml
      service: base-db
    volumes:
      - /var/k8s/discovery-provider-db:/var/lib/postgresql/data # Use k8s location for backward compatibility
    networks:
      - discovery-provider-network

  cache:
    container_name: redis
    restart: always
    extends:
      file: ../common-services.yml
      service: base-cache
    networks:
      - discovery-provider-network

  logspout:
    extends:
      file: ../common-services.yml
      service: logspout
    env_file:
      - override.env
    networks:
      - discovery-provider-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    restart: always
    environment:
      - network.host=0.0.0.0
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - node.name=cluster1-node1
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms${ES_MEM:-2g} -Xmx${ES_MEM:-2g}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - discovery-provider-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail elasticsearch:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      timeout: 5s

  backend:
    container_name: server
    image: audius/discovery-provider:${TAG:-c54dc44721ad3c8352f0cec56b94002cffe9512a}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    labels:
      autoheal: "true"
    ports:
      - "5000:5000"
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    environment:
      - audius_discprov_infra_setup=audius-docker-compose
      - audius_no_workers=false
      - audius_db_run_migrations=false
    networks:
      - discovery-provider-network

  indexer:
    image: audius/discovery-provider:${TAG:-c54dc44721ad3c8352f0cec56b94002cffe9512a}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    labels:
      autoheal: "true"
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    environment:
      - audius_discprov_infra_setup=audius-docker-compose
      - audius_no_server=true
    healthcheck:
      test:
        [
          "CMD_SHELL",
          "pgrep alembic || curl -f http://server:5000/health_check || exit 1"
        ]
    networks:
      - discovery-provider-network

  seed:
    image: audius/discovery-provider:${TAG:-c54dc44721ad3c8352f0cec56b94002cffe9512a}
    command: bash /usr/share/seed.sh ${NETWORK:-prod}
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    volumes:
      - ./seed.sh:/usr/share/seed.sh
    depends_on:
      db:
        condition: service_healthy
    networks:
      - discovery-provider-network
    profiles:
      - seed

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30

  chain:
    image: nethermind/nethermind:1.10.17
    container_name: chain
    env_file:
      - ${NETWORK:-prod}.env
      - override.env
    environment:
      - NETHERMIND_INITCONFIG_STORERECEIPTS=true
      - NETHERMIND_INITCONFIG_ENABLEUNSECUREDDEVWALLET=true
      - NETHERMIND_INITCONFIG_ISMINING=true
      - NETHERMIND_INITCONFIG_CHAINSPECPATH=/config/spec.json
      - NETHERMIND_INITCONFIG_BASEDBPATH=nethermind_db/clique
      - NETHERMIND_NETWORKCONFIG_P2PPORT=30300
      - NETHERMIND_NETWORKCONFIG_DISCOVERYPORT=30300
      - NETHERMIND_JSONRPCCONFIG_HOST=0.0.0.0
      - NETHERMIND_JSONRPCCONFIG_ENABLED=true
      # - NETHERMIND_KEYSTORECONFIG_TESTNODEKEY=${audius_delegate_private_key}
    volumes:
      - ./chain/spec.json:/config/spec.json
      - /var/k8s/discovery-provider-chain/db/clique:/nethermind/nethermind_db/clique
      - /var/k8s/discovery-provider-chain/keystore:/nethermind/keystore
    labels:
      autoheal: "true"
    ports:
      - "30300:30300"
      - "30300:30300/udp"
      - "8545:8545"
    networks:
      - discovery-provider-network
    profiles:
      - chain

networks:
  discovery-provider-network:


volumes:
  esdata:
