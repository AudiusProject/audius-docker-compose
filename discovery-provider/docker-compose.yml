version: "3.9"

# used by audius-d devnet
x-extra-hosts: &extra-hosts
  extra_hosts:
    - "creator-1.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "discovery-1.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "identity.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "eth-ganache.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "acdc-ganache.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"
    - "solana-test-validator.devnet.audius-d:${HOST_DOCKER_INTERNAL:-172.100.0.1}"

services:
  caddy:
    image: audius/caddy:2.7.4
    container_name: caddy
    <<: *extra-hosts
    restart: unless-stopped
    env_file:
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    profiles:
      - discovery

  openresty:
    image: audius/discovery-provider-openresty:${TAG:-current}
    container_name: openresty
    <<: *extra-hosts
    restart: unless-stopped
    env_file:
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    ports:
      - "5000:5000"
    profiles:
      - discovery

  core:
    container_name: core
    image: audius/audiusd:${TAG:-current}
    restart: unless-stopped
    ports:
      - "5001:80"     # echo server (proxy for core + uptime)
      - "26656:26656" # CometBFT P2P Server
      - "26657:26657" # CometBFT RPC Server
      - "26659:26659" # Console UI
      - "50051:50051" # Core GRPC Server
    mem_limit: 2g
    cpus: 2
    volumes:
      - /var/k8s/bolt:/bolt
      - /var/k8s/bolt:/audius-core
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - AUDIUSD_CORE_ONLY=true
      - AUDIUSD_TLS_DISABLED=true
    networks:
      - discovery-provider-network
    pull_policy: always
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - discovery

  comms:
    image: audius/comms:${TAG:-current}
    container_name: comms
    command: comms discovery
    <<: *extra-hosts
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - discovery

  db:
    container_name: postgres
    image: postgres:15.5
    shm_size: 2g
    restart: always
    entrypoint: >
        /bin/bash -c
        "if [ -f /var/lib/postgresql/data/pg_hba.conf ]; then
          if [[ $$(tail -n 1 /var/lib/postgresql/data/pg_hba.conf) != 'hostnossl    all          all            0.0.0.0/0  trust' ]]; then
            echo 'hostnossl    all          all            0.0.0.0/0  trust' >> /var/lib/postgresql/data/pg_hba.conf;
          fi;
        fi;
        /usr/local/bin/docker-entrypoint.sh postgres -c shared_buffers=2GB -c max_connections=500 -c shared_preload_libraries=pg_stat_statements -c listen_addresses='*'"
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: audius_discovery
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    volumes:
      - /var/k8s/discovery-provider-db:/var/lib/postgresql/data
    networks:
      - discovery-provider-network
    profiles:
      - discovery

  backend:
    container_name: server
    image: audius/discovery-provider:${TAG:-current}
    <<: *extra-hosts
    restart: always
    mem_limit: ${SERVER_MEM_LIMIT:-5000000000}
    healthcheck:
      test: [
          "CMD-SHELL",
          "pgrep pg_migrate || curl -f http://localhost:5000/health_check?bypass_errors=true || exit 1"
        ]
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      indexer:
        condition: service_healthy
    labels:
      autoheal: "true"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - audius_discprov_infra_setup=audius-docker-compose
      - audius_no_workers=true
      - audius_db_run_migrations=false
      - audius_elasticsearch_run_indexer=false
    networks:
      - discovery-provider-network
    profiles:
      - discovery

  indexer:
    container_name: indexer
    image: audius/discovery-provider:${TAG:-current}
    <<: *extra-hosts
    restart: always
    mem_limit: ${INDEXER_MEM_LIMIT:-5000000000}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    labels:
      autoheal: "true"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - audius_discprov_infra_setup=audius-docker-compose
      - audius_no_server=true
      - audius_db_run_migrations=true
      - audius_elasticsearch_run_indexer=true
    healthcheck:
      test: >
        /bin/sh -c
        "if pgrep -af pg_migrate | grep -v 'pgrep -af pg_migrate' > /dev/null; then
            # Unhealthy if pg_migrate is found, excluding the pgrep command itself
            exit 1
        elif pgrep -af celery | grep -v 'pgrep -af celery' > /dev/null; then
            # Healthy if celery is found, excluding the pgrep command itself
            exit 0
        else
            # Unhealthy in all other cases
            exit 1
        fi"
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 120m
    networks:
      - discovery-provider-network
    profiles:
      - discovery

  cache:
    container_name: redis
    restart: always
    extends:
      file: ../common-services.yml
      service: base-redis
    networks:
      - discovery-provider-network
    profiles:
      - discovery

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    restart: always
    environment:
      - network.host=0.0.0.0
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - node.name=cluster1-node1
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms${ES_MEM:-2g} -Xmx${ES_MEM:-2g}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - discovery-provider-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail elasticsearch:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      start_period: 40s
      timeout: 5s
    profiles:
      - discovery

  es-indexer:
    image: audius/es-indexer:${TAG:-current}
    container_name: es-indexer
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - discovery

  relay:
    image: audius/relay:${TAG:-current}
    container_name: relay
    <<: *extra-hosts
    restart: unless-stopped
    networks:
      - discovery-provider-network
    environment:
      - ENVIRONMENT=${NETWORK}
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - discovery

  solana-relay:
    image: audius/solana-relay:${TAG:-current}
    container_name: solana-relay
    <<: *extra-hosts
    restart: unless-stopped
    networks:
      - discovery-provider-network
    environment:
      - ENVIRONMENT=${NETWORK}
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - discovery

  optimize-db:
    container_name: optimize-db
    image: postgres:15.5-bookworm
    environment:
      - PGPASSWORD=postgres
    command: >
      sh -c "
      psql -h db -U postgres -d audius_discovery -c 'VACUUM FULL;' &&
      psql -h db -U postgres -d audius_discovery -c 'REINDEX DATABASE audius_discovery;' &&
      psql -h db -U postgres -d audius_discovery -c 'ANALYZE;' &&
      echo 'Database optimization completed'
      "
    networks:
      - discovery-provider-network
    profiles:
      - optimize-db

  seed:
    image: audius/discovery-provider:${TAG:-current}
    command: bash /usr/share/seed.sh ${NETWORK:-prod}
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    volumes:
      - ./seed.sh:/usr/share/seed.sh
    depends_on:
      db:
        condition: service_healthy
    networks:
      - discovery-provider-network
    profiles:
      - seed

  backfill-audio-analyses:
    image: audius/backfill-audio-analyses:${TAG:-current}
    container_name: backfill-audio-analyses
    restart: on-failure
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - discovery

  # plugins
  notifications:
    image: audius/discovery-provider-notifications:${TAG:-current}
    container_name: notifications
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    profiles:
      - notifications

  sla-auditor:
    image: audius/sla-auditor:${TAG:-current}
    container_name: sla-auditor
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - sla-auditor
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  crm:
    image: audius/crm:${TAG:-current}
    container_name: crm
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - crm
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  trending-challenge-rewards:
    image: audius/trending-challenge-rewards:${TAG:-current}
    container_name: trending-challenge-rewards
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - trending-challenge-rewards
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file


  verified-notifications:
    # specific tag because this plugin isn't a part of pedalboard
    image: audius/verified-notifications:540cbb93546f653ad78847f5850c63c8a3de5c02
    container_name: verified-notifications
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - verified-notifications
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  mri:
    image: audius/mri:${TAG:-current}
    container_name: mri
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - mri
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  anti-abuse:
    image: audius/anti-abuse:${TAG:-current}
    container_name: anti-abuse
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - anti-abuse
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    ports:
      - '6003:6003'  

  staking:
    image: audius/staking:${TAG:-current}
    container_name: staking
    restart: unless-stopped
    networks:
      - discovery-provider-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    profiles:
      - staking
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  metabase:
    image: metabase/metabase:v0.48.0
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: audius_discovery
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: postgres
      MB_DB_HOST: postgres
    networks:
      - discovery-provider-network
    profiles:
      - metabase
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # core only node services
  audiusd:
    image: audius/audiusd:${TAG:-current}
    container_name: audiusd
    pull_policy: always
    <<: *extra-hosts
    restart: unless-stopped
    networks:
      - discovery-provider-network
    ports:
      - '26656:26656'                    # cometBFT P2P server
      - '26657:26657'                    # cometBFT RPC server
      - '26659:26659'                    # console UI
      - '50051:50051'                    # core GRPC server
      - '127.0.0.1:5432:5432'            # postgresql
      - "${AUDIUSD_HTTP_PORT:-80}:80"    # echoserver http required for auto tls      
      - "${AUDIUSD_HTTPS_PORT:-443}:443" # echoserver https via letsencrypt
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - LOGSPOUT=ignore
      - AUDIUSD_STORAGE_ENABLED=false
      - audius_core_root_dir=/audius-core
      - audius_db_url=postgresql://postgres:postgres@localhost:5432/audius_discovery
      - audius_db_url_read_replica=postgresql://postgres:postgres@localhost:5432/audius_discovery
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    volumes:
      - /var/k8s/bolt:/bolt
      - /var/k8s/bolt:/audius-core
      - /var/k8s/discovery-provider-db:/data/postgres
    deploy:
      resources:
        limits:
          cpus: '6.0'
          memory: '14G'
    profiles:
      - audiusd

  vector:
    extends:
      file: ../common-services.yml
      service: vector
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - discovery-provider-network
    profiles:
      - discovery
      - audiusd

networks:
  discovery-provider-network:

volumes:
  esdata:
  caddy_data:
  caddy_config:
