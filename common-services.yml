services:
  base-postgres:
    image: postgres:11.4
    shm_size: 2g
    restart: always
    command: postgres -c shared_buffers=2GB -c max_connections=500 -c shared_preload_libraries=pg_stat_statements
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
    ports:
      - '127.0.0.1:5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  base-redis:
    image: redis:7.0
    command: redis-server --save 60 1
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'PING']
      interval: 10s
      timeout: 5s
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    volumes:
      - /var/redis_data:/data

  vector:
    image: audius/vector:0.28.1-alpine
    container_name: vector
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  healthz:
    image: audius/healthz:${TAG:-bc28f396b2606af49c65591119454484b900cf96}
    container_name: healthz
    restart: unless-stopped

  exporter_postgres:
    image: audius/exporter-postgres:v0.10.1
    restart: always

  exporter_elasticsearch:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:v1.3.0
    restart: always

  exporter_redis:
    image: audius/exporter-redis:v1.44.0-alpine
    restart: always

  # Official Prometheus exporter for hardware and OS metrics
  # https://github.com/prometheus/node_exporter/blob/98a40bd712eaeb1fd3ee60ca37e4091c503d8e1c/README.md#docker
  exporter_linux:
    image: quay.io/prometheus/node-exporter:v1.4.0
    container_name: exporter_linux
    network_mode: host
    command: --path.rootfs=/host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    cap_add:
      - SYS_TIME

  exporter_docker:
    image: prom/container-exporter
    container_name: exporter_docker
    restart: always
    volumes:
      - /sys/fs/cgroup:/cgroup
      - /var/run/docker.sock:/var/run/docker.sock
