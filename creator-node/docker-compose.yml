version: "3.9"

services:
  db:
    container_name: postgres
    extends:
      file: ../common-services.yml
      service: base-postgres
    environment:
      POSTGRES_DB: audius_creator_node
    volumes:
      - /var/k8s/creator-node-db:/var/lib/postgresql/data # Use k8s location for backward compatibility
    networks:
      - creator-node-network

  cache:
    container_name: redis
    extends:
      file: ../common-services.yml
      service: base-redis
    networks:
      - creator-node-network

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  vector:
    extends:
      file: ../common-services.yml
      service: vector
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - creator-node-network

  mediorum:
    image: audius/mediorum:${TAG:-d168c299342e1e989a688c9ea6225a5e9708f77c}
    container_name: mediorum
    restart: unless-stopped
    networks:
      - creator-node-network
    ports:
      - "${MEDIORUM_PORT:-4000}:1991"
      - 127.0.0.1:6060:6060
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    volumes:
      - /var/k8s/mediorum:/tmp/mediorum
      - /var/k8s/creator-node-backend:/file_storage
    environment:
      - LOGSPOUT=ignore
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  healthz:
    image: audius/healthz:${TAG:-d168c299342e1e989a688c9ea6225a5e9708f77c}
    container_name: healthz
    restart: unless-stopped
    networks:
      - creator-node-network

  caddy:
    image: audius/caddy:2.7.4
    container_name: caddy
    restart: unless-stopped
    env_file:
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - creator-node-network
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - dashboard-dist:/dashboard-dist

  dashboard:
    image: audius/dashboard:${TAG:-d168c299342e1e989a688c9ea6225a5e9708f77c}
    container_name: dashboard
    restart: unless-stopped
    command: ["sh", "-c", "npm run build:${NETWORK:-prod} && tail -f /dev/null"]
    networks:
      - creator-node-network
    volumes:
      - dashboard-dist:/app/dist

  uptime:
    image: audius/uptime:${TAG:-d168c299342e1e989a688c9ea6225a5e9708f77c}
    container_name: uptime
    restart: unless-stopped
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - creator-node-network
    volumes:
      - /var/k8s/bolt:/bolt

networks:
  creator-node-network:

volumes:
  caddy_data:
  caddy_config:
  dashboard-dist:
