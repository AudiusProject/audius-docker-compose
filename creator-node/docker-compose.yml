version: "3.9"

services:
  reverse-proxy:
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      - "4000:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - creator-node-network

  db:
    container_name: postgres
    extends:
      file: ../common-services.yml
      service: base-postgres
    environment:
      POSTGRES_DB: audius_creator_node
    volumes:
      - /var/k8s/creator-node-db:/var/lib/postgresql/data # Use k8s location for backward compatibility
    networks:
      - creator-node-network
  exporter_postgres:
    extends:
      file: ../common-services.yml
      service: exporter_postgres
    container_name: exporter_postgres
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    command: [ "--creator-node" ]
    networks:
      - creator-node-network

  cache:
    container_name: redis
    extends:
      file: ../common-services.yml
      service: base-redis
    networks:
      - creator-node-network
  exporter_redis:
    extends:
      file: ../common-services.yml
      service: exporter_redis
    container_name: exporter_redis
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    command: [ "--creator-node" ]
    networks:
      - creator-node-network

  backend:
    container_name: server
    image: audius/creator-node:${TAG:-b3b90ba7e80fad3b876c63678830f52b61f93d3c}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - /var/k8s/creator-node-backend:/file_storage # Use k8s location for backward compatibility
    labels:
      - "autoheal=true"
      - "traefik.http.routers.creator.rule=PathPrefix(`/`)"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - audiusContentInfraSetup=audius-docker-compose
    networks:
      - creator-node-network
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    extra_hosts:
      - "host.docker.internal:host-gateway"

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  logspout:
    extends:
      file: ../common-services.yml
      service: logspout
    env_file:
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - creator-node-network

  exporter_linux:
    extends:
      file: ../common-services.yml
      service: exporter_linux
    container_name: exporter_linux

  storage:
    image: audius/comms:${COMMS_TAG:-d61a9c2a096d67d0c98bf39ff06be65119d44bd9}
    container_name: storage
    command: storage
    depends_on:
      - nats
    restart: unless-stopped
    networks:
      - creator-node-network
    labels:
      - "traefik.http.routers.storage.rule=PathPrefix(`/storage`)"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - LOGSPOUT=ignore
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  nats:
    image: audius/comms:${COMMS_TAG:-d61a9c2a096d67d0c98bf39ff06be65119d44bd9}
    container_name: nats
    command: nats
    restart: unless-stopped
    networks:
      - creator-node-network
    labels:
      - "traefik.http.routers.nats.rule=PathPrefix(`/nats`)"
      - "traefik.http.services.nats.loadbalancer.server.port=8924"
    ports:
      - "6222:6222"
      - "4222:4222"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - LOGSPOUT=ignore
    volumes:
      - /var/k8s/nats:/nats
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  mediorum:
    image: audius/mediorum:latest
    container_name: mediorum
    restart: unless-stopped
    networks:
      - creator-node-network
    labels:
      - "traefik.http.routers.mediorum.rule=PathPrefix(`/mediorum`)"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    volumes:
      - /var/k8s/mediorum:/tmp/mediorum
    environment:
      - LOGSPOUT=ignore
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

networks:
  creator-node-network:
