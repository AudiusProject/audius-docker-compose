version: "3.9"

services:
  db:
    container_name: postgres
    extends:
      file: ../common-services.yml
      service: base-postgres
    environment:
      POSTGRES_DB: audius_creator_node
    volumes:
      - /var/k8s/creator-node-db:/var/lib/postgresql/data # Use k8s location for backward compatibility
    networks:
      - creator-node-network
  exporter_postgres:
    extends:
      file: ../common-services.yml
      service: exporter_postgres
    container_name: exporter_postgres
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    command: [ "--creator-node" ]
    networks:
      - creator-node-network

  cache:
    container_name: redis
    extends:
      file: ../common-services.yml
      service: base-redis
    networks:
      - creator-node-network
  exporter_redis:
    extends:
      file: ../common-services.yml
      service: exporter_redis
    container_name: exporter_redis
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    command: [ "--creator-node" ]
    networks:
      - creator-node-network

  backend:
    container_name: server
    image: audius/creator-node:${TAG:-7639c80cf41bb85d4e2dc722e07a4726a2db29ef}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - /var/k8s/creator-node-backend:/file_storage # Use k8s location for backward compatibility
    labels:
      autoheal: "true"
    ports:
      - "4000:4000"
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    environment:
      - audiusContentInfraSetup=audius-docker-compose
    networks:
      - creator-node-network
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file
    extra_hosts:
      - "host.docker.internal:host-gateway"

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

  vector:
    extends:
      file: ../common-services.yml
      service: vector
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    networks:
      - creator-node-network

  exporter_linux:
    extends:
      file: ../common-services.yml
      service: exporter_linux
    container_name: exporter_linux

  mediorum:
    image: audius/mediorum:latest
    container_name: mediorum
    restart: unless-stopped
    networks:
      - creator-node-network
    env_file:
      - ${NETWORK:-prod}.env
      - ${OVERRIDE_PATH:-override.env}
    volumes:
      - /var/k8s/mediorum:/tmp/mediorum
      - /var/k8s/creator-node-backend:/file_storage:ro # share fs with node.js app... ro mode for safety
    environment:
      - LOGSPOUT=ignore
    logging:
      options:
        max-size: 10m
        max-file: 3
        mode: non-blocking
        max-buffer-size: 100m
      driver: json-file

networks:
  creator-node-network:
